//
// File generated by rootcint at Mon Jan 12 14:39:14 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME rootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "rootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TCaloHitRoot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCaloHitRoot(void *p = 0);
   static void *newArray_TCaloHitRoot(Long_t size, void *p);
   static void delete_TCaloHitRoot(void *p);
   static void deleteArray_TCaloHitRoot(void *p);
   static void destruct_TCaloHitRoot(void *p);
   static void streamer_TCaloHitRoot(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCaloHitRoot*)
   {
      ::TCaloHitRoot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCaloHitRoot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCaloHitRoot", ::TCaloHitRoot::Class_Version(), "./../include/TCaloHitRoot.hh", 12,
                  typeid(::TCaloHitRoot), DefineBehavior(ptr, ptr),
                  &::TCaloHitRoot::Dictionary, isa_proxy, 0,
                  sizeof(::TCaloHitRoot) );
      instance.SetNew(&new_TCaloHitRoot);
      instance.SetNewArray(&newArray_TCaloHitRoot);
      instance.SetDelete(&delete_TCaloHitRoot);
      instance.SetDeleteArray(&deleteArray_TCaloHitRoot);
      instance.SetDestructor(&destruct_TCaloHitRoot);
      instance.SetStreamerFunc(&streamer_TCaloHitRoot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCaloHitRoot*)
   {
      return GenerateInitInstanceLocal((::TCaloHitRoot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCaloHitRoot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TRawCaloHitRoot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TRawCaloHitRoot(void *p = 0);
   static void *newArray_TRawCaloHitRoot(Long_t size, void *p);
   static void delete_TRawCaloHitRoot(void *p);
   static void deleteArray_TRawCaloHitRoot(void *p);
   static void destruct_TRawCaloHitRoot(void *p);
   static void streamer_TRawCaloHitRoot(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TRawCaloHitRoot*)
   {
      ::TRawCaloHitRoot *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TRawCaloHitRoot >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TRawCaloHitRoot", ::TRawCaloHitRoot::Class_Version(), "./../include/TRawCaloHitRoot.hh", 14,
                  typeid(::TRawCaloHitRoot), DefineBehavior(ptr, ptr),
                  &::TRawCaloHitRoot::Dictionary, isa_proxy, 0,
                  sizeof(::TRawCaloHitRoot) );
      instance.SetNew(&new_TRawCaloHitRoot);
      instance.SetNewArray(&newArray_TRawCaloHitRoot);
      instance.SetDelete(&delete_TRawCaloHitRoot);
      instance.SetDeleteArray(&deleteArray_TRawCaloHitRoot);
      instance.SetDestructor(&destruct_TRawCaloHitRoot);
      instance.SetStreamerFunc(&streamer_TRawCaloHitRoot);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TRawCaloHitRoot*)
   {
      return GenerateInitInstanceLocal((::TRawCaloHitRoot*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TRawCaloHitRoot*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TCaloHitRoot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCaloHitRoot::Class_Name()
{
   return "TCaloHitRoot";
}

//______________________________________________________________________________
const char *TCaloHitRoot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCaloHitRoot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCaloHitRoot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCaloHitRoot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCaloHitRoot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCaloHitRoot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCaloHitRoot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCaloHitRoot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TRawCaloHitRoot::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TRawCaloHitRoot::Class_Name()
{
   return "TRawCaloHitRoot";
}

//______________________________________________________________________________
const char *TRawCaloHitRoot::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRawCaloHitRoot*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TRawCaloHitRoot::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TRawCaloHitRoot*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TRawCaloHitRoot::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRawCaloHitRoot*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TRawCaloHitRoot::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TRawCaloHitRoot*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TCaloHitRoot::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCaloHitRoot.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fX;
      R__b >> fY;
      R__b >> fZ;
      R__b >> I;
      R__b >> J;
      R__b >> K;
      R__b >> fDif_id;
      R__b >> fAsic_id;
      R__b >> fChan_id;
      R__b >> fTime;
      R__b >> fThr;
      R__b.CheckByteCount(R__s, R__c, TCaloHitRoot::IsA());
   } else {
      R__c = R__b.WriteVersion(TCaloHitRoot::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fX;
      R__b << fY;
      R__b << fZ;
      R__b << I;
      R__b << J;
      R__b << K;
      R__b << fDif_id;
      R__b << fAsic_id;
      R__b << fChan_id;
      R__b << fTime;
      R__b << fThr;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCaloHitRoot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCaloHitRoot.
      TClass *R__cl = ::TCaloHitRoot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "I", &I);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "J", &J);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "K", &K);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDif_id", &fDif_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAsic_id", &fAsic_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChan_id", &fChan_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThr", &fThr);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCaloHitRoot(void *p) {
      return  p ? new(p) ::TCaloHitRoot : new ::TCaloHitRoot;
   }
   static void *newArray_TCaloHitRoot(Long_t nElements, void *p) {
      return p ? new(p) ::TCaloHitRoot[nElements] : new ::TCaloHitRoot[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCaloHitRoot(void *p) {
      delete ((::TCaloHitRoot*)p);
   }
   static void deleteArray_TCaloHitRoot(void *p) {
      delete [] ((::TCaloHitRoot*)p);
   }
   static void destruct_TCaloHitRoot(void *p) {
      typedef ::TCaloHitRoot current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCaloHitRoot(TBuffer &buf, void *obj) {
      ((::TCaloHitRoot*)obj)->::TCaloHitRoot::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCaloHitRoot

//______________________________________________________________________________
void TRawCaloHitRoot::Streamer(TBuffer &R__b)
{
   // Stream an object of class TRawCaloHitRoot.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fX;
      R__b >> fY;
      R__b >> fZ;
      R__b >> I;
      R__b >> J;
      R__b >> K;
      R__b >> fDif_id;
      R__b >> fAsic_id;
      R__b >> fChan_id;
      R__b >> fTime;
      R__b >> fThr;
      R__b >> _layer_gap;
      R__b.CheckByteCount(R__s, R__c, TRawCaloHitRoot::IsA());
   } else {
      R__c = R__b.WriteVersion(TRawCaloHitRoot::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fX;
      R__b << fY;
      R__b << fZ;
      R__b << I;
      R__b << J;
      R__b << K;
      R__b << fDif_id;
      R__b << fAsic_id;
      R__b << fChan_id;
      R__b << fTime;
      R__b << fThr;
      R__b << _layer_gap;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TRawCaloHitRoot::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TRawCaloHitRoot.
      TClass *R__cl = ::TRawCaloHitRoot::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "I", &I);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "J", &J);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "K", &K);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDif_id", &fDif_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAsic_id", &fAsic_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChan_id", &fChan_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThr", &fThr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_layer_gap", &_layer_gap);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TRawCaloHitRoot(void *p) {
      return  p ? new(p) ::TRawCaloHitRoot : new ::TRawCaloHitRoot;
   }
   static void *newArray_TRawCaloHitRoot(Long_t nElements, void *p) {
      return p ? new(p) ::TRawCaloHitRoot[nElements] : new ::TRawCaloHitRoot[nElements];
   }
   // Wrapper around operator delete
   static void delete_TRawCaloHitRoot(void *p) {
      delete ((::TRawCaloHitRoot*)p);
   }
   static void deleteArray_TRawCaloHitRoot(void *p) {
      delete [] ((::TRawCaloHitRoot*)p);
   }
   static void destruct_TRawCaloHitRoot(void *p) {
      typedef ::TRawCaloHitRoot current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TRawCaloHitRoot(TBuffer &buf, void *obj) {
      ((::TRawCaloHitRoot*)obj)->::TRawCaloHitRoot::Streamer(buf);
   }
} // end of namespace ROOT for class ::TRawCaloHitRoot

/********************************************************
* rootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablerootDict();

extern "C" void G__set_cpp_environmentrootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/TCaloHitRoot.hh");
  G__add_compiledheader("../include/TRawCaloHitRoot.hh");
  G__cpp_reset_tagtablerootDict();
}
#include <new>
extern "C" int G__cpp_dllrevrootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TCaloHitRoot */
static int G__rootDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCaloHitRoot* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCaloHitRoot[n];
     } else {
       p = new((void*) gvp) TCaloHitRoot[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCaloHitRoot;
     } else {
       p = new((void*) gvp) TCaloHitRoot;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TCaloHitRoot*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCaloHitRoot*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TCaloHitRoot*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TCaloHitRoot*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TCaloHitRoot*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCaloHitRoot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCaloHitRoot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCaloHitRoot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCaloHitRoot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCaloHitRoot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCaloHitRoot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCaloHitRoot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCaloHitRoot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCaloHitRoot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__rootDict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCaloHitRoot* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCaloHitRoot(*(TCaloHitRoot*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCaloHitRoot G__TTCaloHitRoot;
static int G__rootDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCaloHitRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCaloHitRoot*) (soff+(sizeof(TCaloHitRoot)*i)))->~G__TTCaloHitRoot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCaloHitRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCaloHitRoot*) (soff))->~G__TTCaloHitRoot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__rootDict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCaloHitRoot* dest = (TCaloHitRoot*) G__getstructoffset();
   *dest = *(TCaloHitRoot*) libp->para[0].ref;
   const TCaloHitRoot& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TRawCaloHitRoot */
static int G__rootDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRawCaloHitRoot* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRawCaloHitRoot[n];
     } else {
       p = new((void*) gvp) TRawCaloHitRoot[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TRawCaloHitRoot;
     } else {
       p = new((void*) gvp) TRawCaloHitRoot;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TRawCaloHitRoot*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRawCaloHitRoot*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRawCaloHitRoot*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRawCaloHitRoot*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TRawCaloHitRoot*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TRawCaloHitRoot*) G__getstructoffset())->SetLayerGap((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TRawCaloHitRoot*) G__getstructoffset())->SetLayerGap();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TRawCaloHitRoot::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRawCaloHitRoot::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TRawCaloHitRoot::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TRawCaloHitRoot::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TRawCaloHitRoot*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRawCaloHitRoot::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRawCaloHitRoot::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TRawCaloHitRoot::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__rootDict_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TRawCaloHitRoot::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__rootDict_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TRawCaloHitRoot* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TRawCaloHitRoot(*(TRawCaloHitRoot*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TRawCaloHitRoot G__TTRawCaloHitRoot;
static int G__rootDict_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TRawCaloHitRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TRawCaloHitRoot*) (soff+(sizeof(TRawCaloHitRoot)*i)))->~G__TTRawCaloHitRoot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TRawCaloHitRoot*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TRawCaloHitRoot*) (soff))->~G__TTRawCaloHitRoot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__rootDict_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TRawCaloHitRoot* dest = (TRawCaloHitRoot*) G__getstructoffset();
   *dest = *(TRawCaloHitRoot*) libp->para[0].ref;
   const TRawCaloHitRoot& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TCaloHitRoot */

/* TRawCaloHitRoot */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncrootDict {
 public:
  G__Sizep2memfuncrootDict(): p(&G__Sizep2memfuncrootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncrootDict::*p)();
};

size_t G__get_sizep2memfuncrootDict()
{
  G__Sizep2memfuncrootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancerootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot))) {
     TCaloHitRoot *G__Lderived;
     G__Lderived=(TCaloHitRoot*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot),G__get_linked_tagnum(&G__rootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot))) {
     TRawCaloHitRoot *G__Lderived;
     G__Lderived=(TRawCaloHitRoot*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot),G__get_linked_tagnum(&G__rootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablerootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__rootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__rootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__rootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__rootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__rootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint>",117,G__get_linked_tagnum(&G__rootDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TCaloHitRoot */
static void G__setup_memvarTCaloHitRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot));
   { TCaloHitRoot *p; p=(TCaloHitRoot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"I=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"J=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"K=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fDif_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fAsic_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fChan_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fThr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TRawCaloHitRoot */
static void G__setup_memvarTRawCaloHitRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot));
   { TRawCaloHitRoot *p; p=(TRawCaloHitRoot*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"I=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"J=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"K=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fDif_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fAsic_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fChan_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fThr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"_layer_gap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__rootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarrootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTCaloHitRoot(void) {
   /* TCaloHitRoot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot));
   G__memfunc_setup("TCaloHitRoot",1180,G__rootDict_168_0_1, 105, G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__rootDict_168_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__rootDict_168_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__rootDict_168_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__rootDict_168_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__rootDict_168_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rootDict_168_0_7, 85, G__get_linked_tagnum(&G__rootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCaloHitRoot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rootDict_168_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCaloHitRoot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rootDict_168_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCaloHitRoot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rootDict_168_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCaloHitRoot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rootDict_168_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rootDict_168_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCaloHitRoot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rootDict_168_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCaloHitRoot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rootDict_168_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCaloHitRoot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rootDict_168_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCaloHitRoot::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCaloHitRoot", 1180, G__rootDict_168_0_19, (int) ('i'), G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot), -1, 0, 1, 1, 1, 0, "u 'TCaloHitRoot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCaloHitRoot", 1306, G__rootDict_168_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__rootDict_168_0_21, (int) ('u'), G__get_linked_tagnum(&G__rootDictLN_TCaloHitRoot), -1, 1, 1, 1, 1, 0, "u 'TCaloHitRoot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTRawCaloHitRoot(void) {
   /* TRawCaloHitRoot */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot));
   G__memfunc_setup("TRawCaloHitRoot",1478,G__rootDict_170_0_1, 105, G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__rootDict_170_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__rootDict_170_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__rootDict_170_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__rootDict_170_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__rootDict_170_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLayerGap",1089,G__rootDict_170_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '2.8' gap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__rootDict_170_0_8, 85, G__get_linked_tagnum(&G__rootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TRawCaloHitRoot::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__rootDict_170_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRawCaloHitRoot::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__rootDict_170_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TRawCaloHitRoot::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__rootDict_170_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TRawCaloHitRoot::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__rootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__rootDict_170_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__rootDict_170_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRawCaloHitRoot::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__rootDict_170_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRawCaloHitRoot::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__rootDict_170_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TRawCaloHitRoot::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__rootDict_170_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TRawCaloHitRoot::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TRawCaloHitRoot", 1478, G__rootDict_170_0_20, (int) ('i'), G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot), -1, 0, 1, 1, 1, 0, "u 'TRawCaloHitRoot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TRawCaloHitRoot", 1604, G__rootDict_170_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__rootDict_170_0_22, (int) ('u'), G__get_linked_tagnum(&G__rootDictLN_TRawCaloHitRoot), -1, 1, 1, 1, 1, 0, "u 'TRawCaloHitRoot' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncrootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalrootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcrootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__rootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__rootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__rootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__rootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__rootDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__rootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__rootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__rootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__rootDictLN_TCaloHitRoot = { "TCaloHitRoot" , 99 , -1 };
G__linked_taginfo G__rootDictLN_TRawCaloHitRoot = { "TRawCaloHitRoot" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablerootDict() {
  G__rootDictLN_TClass.tagnum = -1 ;
  G__rootDictLN_TBuffer.tagnum = -1 ;
  G__rootDictLN_TMemberInspector.tagnum = -1 ;
  G__rootDictLN_TObject.tagnum = -1 ;
  G__rootDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__rootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__rootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__rootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__rootDictLN_TCaloHitRoot.tagnum = -1 ;
  G__rootDictLN_TRawCaloHitRoot.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablerootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__rootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__rootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__rootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__rootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__rootDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__rootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__rootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__rootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootDictLN_TCaloHitRoot),sizeof(TCaloHitRoot),-1,28928,(char*)NULL,G__setup_memvarTCaloHitRoot,G__setup_memfuncTCaloHitRoot);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__rootDictLN_TRawCaloHitRoot),sizeof(TRawCaloHitRoot),-1,28928,(char*)NULL,G__setup_memvarTRawCaloHitRoot,G__setup_memfuncTRawCaloHitRoot);
}
extern "C" void G__cpp_setuprootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setuprootDict()");
  G__set_cpp_environmentrootDict();
  G__cpp_setup_tagtablerootDict();

  G__cpp_setup_inheritancerootDict();

  G__cpp_setup_typetablerootDict();

  G__cpp_setup_memvarrootDict();

  G__cpp_setup_memfuncrootDict();
  G__cpp_setup_globalrootDict();
  G__cpp_setup_funcrootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncrootDict();
  return;
}
class G__cpp_setup_initrootDict {
  public:
    G__cpp_setup_initrootDict() { G__add_setup_func("rootDict",(G__incsetup)(&G__cpp_setuprootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initrootDict() { G__remove_setup_func("rootDict"); }
};
G__cpp_setup_initrootDict G__cpp_setup_initializerrootDict;

